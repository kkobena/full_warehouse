spring:
  servlet:
    multipart:
      max-file-size: 10MB
      max-request-size: 10MB
  config:
    activate:
      on-profile: '!api-docs'
springdoc:
  api-docs:
    enabled: false
---
management:
  endpoints:
    web:
      base-path: /management
      exposure:
        include:
          - health

  endpoint:
    health:
      show-details: when_authorized
      roles: 'ROLE_ADMIN'
      probes:
        enabled: true
      group:
        liveness:
          include: livenessState
        readiness:
          include: readinessState,db

  health:
    mail:
      enabled: false # When using the MailService, configure an SMTP server and set this to true



spring:
  mail:
    host: smtp.gmail.com
    port: 587
    username: "easyshopws@gmail.com"
    password: "ndid bogp ywrv umkt" #"4Y8b)7{g,cMF2b"
    protocol: smtp
    properties:
      mail:
        smtp:
          auth: true
          starttls:
            enable: true
            required: true




  flyway:
    enabled: true
    create-schemas: false
    driver-class-name: com.mysql.cj.jdbc.Driver
    password: warehouse2802
    user: warehouse
    installed-by: warehouse
    schemas: warehouse
    community-db-support-enabled: true
    detect-encoding: true
    baseline-description: 'initilize warehouse database'
    baseline-on-migrate: true
    table: warehouse_history

  application:
    name: warehouse
  profiles:
    # The commented value for `active` can be replaced with valid Spring profiles to load.
    # Otherwise, it will be filled in by maven when building the JAR file
    # Either way, it can be overridden by `--spring.profiles.active` value passed in the commandline or `-Dspring.profiles.active` set in `JAVA_OPTS`
    active: '@spring.profiles.active@'
    group:
      dev:
        - prod
        # Uncomment to activate TLS for the dev profile
        #- tls
  jmx:
    enabled: false

  data:
    jpa:
      repositories:
        bootstrap-mode: deferred
  jpa:
    database-platform: org.hibernate.dialect.MariaDBDialect
    open-in-view: false
    properties:
      hibernate:
        format_sql: false
        generate_statistics: true
      hibernate.jdbc.time_zone: UTC
      hibernate.timezone.default_storage: NORMALIZE
      hibernate.id.new_generator_mappings: true
      hibernate.connection.provider_disables_autocommit: true
      hibernate.cache.use_second_level_cache: false
      hibernate.cache.use_query_cache: false
      hibernate.generate_statistics: true
      # modify batch size as necessary
      hibernate.jdbc.batch_size: 25
      hibernate.order_inserts: true
      hibernate.order_updates: true
      hibernate.query.fail_on_pagination_over_collection_fetch: true
      hibernate.query.in_clause_parameter_padding: true
    hibernate:
      ddl-auto: none
      naming:
        physical-strategy: org.hibernate.boot.model.naming.CamelCaseToUnderscoresNamingStrategy
        implicit-strategy: org.springframework.boot.orm.jpa.hibernate.SpringImplicitNamingStrategy
    show-sql: false

  messages:
    basename: i18n/messages
  main:
    allow-bean-definition-overriding: true
  mvc:
    problemdetails:
      enabled: true
  task:
    execution:
      thread-name-prefix: warehouse-task-
      pool:
        core-size: 2
        max-size: 50
        queue-capacity: 10000
    scheduling:
      thread-name-prefix: warehouse-scheduling-
      pool:
        size: 2
  thymeleaf:
    mode: HTML


server:
  servlet:
    session:
      cookie:
        http-only: true

springdoc:
  show-actuator: false

# Properties to be exposed on the /info management endpoint
info:
  # Comma separated list of profiles that will trigger the ribbon to show
  display-ribbon-on-profiles: 'dev'

# ===================================================================
# JHipster specific properties
#
# Full reference is available at: https://www.jhipster.tech/common-application-properties/
# ===================================================================

jhipster:
  clientApp:
    name: 'warehouseApp'

  mail:
    from: easyshopws@gmail.com
  api-docs:
    default-include-pattern: /api/**
    management-include-pattern: /management/**
    title: Warehouse API
    description: Warehouse API documentation
    version: 0.0.1
    terms-of-service-url:
    contact-name:
    contact-url:
    contact-email:
    license: unlicensed
    license-url:
  security:
    content-security-policy: "default-src 'self'; frame-src 'self' data:; script-src 'self' 'unsafe-inline' 'unsafe-eval' https://storage.googleapis.com; style-src 'self' https://fonts.googleapis.com 'unsafe-inline'; img-src 'self' data:; font-src 'self' https://fonts.gstatic.com data:"

# application:
portCom:
legacy-url: http://localhost:9090/laborex
mail:
  username: Warehouse
  email: badoukobena@gmail.com


